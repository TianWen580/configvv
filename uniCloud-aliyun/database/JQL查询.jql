// 本文件用于，使用JQL语法操作项目关联的uniCloud空间的数据库，方便开发调试和远程数据库管理
// 编写clientDB的js API（也支持常规js语法，比如var），可以对云数据库进行增删改查操作。不支持uniCloud-db组件写法
// 可以全部运行，也可以选中部分代码运行。点击工具栏上的运行按钮或者按下【F5】键运行代码
// 如果文档中存在多条JQL语句，只有最后一条语句生效
// 如果混写了普通js，最后一条语句需是数据库操作语句
// 此处代码运行不受DB Schema的权限控制，移植代码到实际业务中注意在schema中配好permission
// 不支持clientDB的action
// 数据库查询有最大返回条数限制，详见：https://uniapp.dcloud.net.cn/uniCloud/cf-database.html#limit
// 详细JQL语法，请参考：https://uniapp.dcloud.net.cn/uniCloud/jql.html

//更新configvv表的数据，把其中data.mmpretrain.bilinks的数据更新
const db = uniCloud.database()
const collection = db.collection('configvv')
const res = collection.where({
    _id: '667e4981466d41f585f03e6e'
}).update({
    data: {
        mmpretrain: {
            bilinks: {
    "losses": [
        "asymmetric_loss",
        "AsymmetricLoss",
        "cross_entropy",
        "binary_cross_entropy",
        "CrossEntropyLoss",
        "reduce_loss",
        "weight_reduce_loss",
        "LabelSmoothLoss",
        "weighted_loss",
        "FocalLoss",
        "sigmoid_focal_loss",
        "convert_to_one_hot",
        "SeesawLoss",
        "CAELoss",
        "CosineSimilarityLoss",
        "CrossCorrelationLoss",
        "PixelReconstructionLoss",
        "SwAVLoss"
    ],
    "retrievers": [
        "BaseRetriever",
        "ImageToImageRetriever"
    ],
    "necks": [
        "GlobalAveragePooling",
        "GeneralizedMeanPooling",
        "HRFuseScales",
        "LinearNeck",
        "BEiTV2Neck",
        "CAENeck",
        "DenseCLNeck",
        "MAEPretrainDecoder",
        "ClsBatchNormNeck",
        "MILANPretrainDecoder",
        "MixMIMPretrainDecoder",
        "MoCoV2Neck",
        "NonLinearNeck",
        "SimMIMLinearDecoder",
        "SwAVNeck",
        "iTPNPretrainDecoder",
        "SparKLightDecoder"
    ],
    "selfsup": [
        "BaseSelfSupervisor",
        "BEiTPretrainViT",
        "VQKD",
        "CAEPretrainViT",
        "DALLEEncoder",
        "MAEViT",
        "MAEHiViT",
        "iTPNHiViT",
        "iTPN",
        "HOGGenerator",
        "MaskFeatViT",
        "CLIPGenerator",
        "MILANViT",
        "MixMIMPretrainTransformer",
        "MoCoV3ViT",
        "SimMIMSwinTransformer",
        "MoCo",
        "MoCoV3",
        "BYOL",
        "SimCLR",
        "SimSiam",
        "BEiT",
        "CAE",
        "MAE",
        "MaskFeat",
        "MILAN",
        "MixMIM",
        "SimMIM",
        "EVA",
        "DenseCL",
        "BarlowTwins",
        "SwAV",
        "SparK",
        "MFF",
        "MFFViT"
    ],
    "utils": [
        "channel_shuffle",
        "make_divisible",
        "InvertedResidual",
        "SELayer",
        "to_ntuple",
        "to_2tuple",
        "to_3tuple",
        "to_4tuple",
        "PatchEmbed",
        "PatchMerging",
        "HybridEmbed",
        "RandomBatchAugment",
        "ShiftWindowMSA",
        "is_tracing",
        "MultiheadAttention",
        "ConditionalPositionEncoding",
        "resize_pos_embed",
        "resize_relative_position_bias_table",
        "ClsDataPreprocessor",
        "Mixup",
        "CutMix",
        "ResizeMix",
        "BEiTAttention",
        "LayerScale",
        "WindowMSA",
        "WindowMSAV2",
        "ChannelMultiheadAttention",
        "PositionEncodingFourier",
        "LeAttention",
        "GRN",
        "LayerNorm2d",
        "build_norm_layer",
        "CrossMultiheadAttention",
        "build_2d_sincos_position_embedding",
        "PromptMultiheadAttention",
        "NormEMAVectorQuantizer",
        "build_clip_model",
        "batch_shuffle_ddp",
        "batch_unshuffle_ddp",
        "SelfSupDataPreprocessor",
        "TwoNormDataPreprocessor",
        "VideoDataPreprocessor",
        "CosineEMA",
        "ResLayerExtraNorm",
        "MultiModalDataPreprocessor",
        "QuickGELU",
        "SwiGLUFFN",
        "SwiGLUFFNFused",
        "RotaryEmbeddingFast",
        "SparseAvgPooling",
        "SparseConv2d",
        "SparseHelper",
        "SparseMaxPooling",
        "SparseBatchNorm2d",
        "SparseLayerNorm2D",
        "SparseSyncBatchNorm2d"
    ],
    "heads": [
        "ClsHead",
        "LinearClsHead",
        "StackedLinearClsHead",
        "MultiLabelClsHead",
        "MultiLabelLinearClsHead",
        "VisionTransformerClsHead",
        "DeiTClsHead",
        "ConformerHead",
        "EfficientFormerClsHead",
        "ArcFaceClsHead",
        "CSRAClsHead",
        "MultiTaskHead",
        "LeViTClsHead",
        "VigClsHead",
        "BEiTV1Head",
        "BEiTV2Head",
        "CAEHead",
        "ContrastiveHead",
        "LatentCrossCorrelationHead",
        "LatentPredictHead",
        "MAEPretrainHead",
        "MixMIMPretrainHead",
        "SwAVHead",
        "MoCoV3Head",
        "MIMHead",
        "SimMIMHead",
        "SeqGenerationHead",
        "VQAGenerationHead",
        "ITCHead",
        "ITMHead",
        "GroundingHead",
        "iTPNClipHead",
        "SparKPretrainHead"
    ],
    "peft": [
        "LoRAModel"
    ],
    "tta": [
        "AverageClsScoreTTA"
    ],
    "backbones": [
        "LeNet5",
        "AlexNet",
        "VGG",
        "RegNet",
        "ResNet",
        "ResNeXt",
        "ResNetV1d",
        "ResNeSt",
        "ResNet_CIFAR",
        "SEResNet",
        "SEResNeXt",
        "ShuffleNetV1",
        "ShuffleNetV2",
        "MobileNetV2",
        "MobileNetV3",
        "VisionTransformer",
        "SwinTransformer",
        "TNT",
        "TIMMBackbone",
        "T2T_ViT",
        "Res2Net",
        "RepVGG",
        "Conformer",
        "MlpMixer",
        "DistilledVisionTransformer",
        "PCPVT",
        "SVT",
        "EfficientNet",
        "EfficientNetV2",
        "ConvNeXt",
        "HRNet",
        "ResNetV1c",
        "ConvMixer",
        "EdgeNeXt",
        "CSPDarkNet",
        "CSPResNet",
        "CSPResNeXt",
        "CSPNet",
        "RepLKNet",
        "RepMLPNet",
        "PoolFormer",
        "RIFormer",
        "DenseNet",
        "VAN",
        "InceptionV3",
        "MobileOne",
        "EfficientFormer",
        "SwinTransformerV2",
        "MViT",
        "DeiT3",
        "HorNet",
        "MobileViT",
        "DaViT",
        "BEiTViT",
        "RevVisionTransformer",
        "MixMIMTransformer",
        "TinyViT",
        "LeViT",
        "Vig",
        "PyramidVig",
        "XCiT",
        "ViTSAM",
        "ViTEVA02",
        "HiViT",
        "SparseResNet",
        "SparseConvNeXt"
    ],
    "classifiers": [
        "BaseClassifier",
        "ImageClassifier",
        "TimmClassifier",
        "HuggingFaceClassifier"
    ]
}
        }
    }
})


